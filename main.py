import telebot
import os
from telebot import types
bot = telebot.TeleBot("1678843844:AAGgn-_HvA4aFmsKpSPQbFejDt5pUBjYBuY")
name = ""
chars = ""
gilds = ""
d = 0
keyboard1 = telebot.types.ReplyKeyboardMarkup()
keyboard1.row("–°–æ—é–∑—ã", "–ê—Ç–∞–∫–∏")
keyboard1.row("–ó–∞—â–∏—Ç–∞", "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
keyboard1.row("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
keyboard2 = telebot.types.ReplyKeyboardMarkup()
keyboard2.row("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
keyboard3 = telebot.types.ReplyKeyboardMarkup()
keyboard3.row("–ü—Ä–æ—Ñ–∏–ª—å", "–£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç")
keyboard3.row("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
keyboard4 = telebot.types.ReplyKeyboardMarkup()
keyboard4.row("–ù–æ–≤–∞—è –∞—Ç–∞–∫–∞", "–ö–∞—Ç–∞–ª–æ–≥ –∞—Ç–∞–∫")
keyboard4.row("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
keyboard5 = telebot.types.ReplyKeyboardMarkup()
keyboard5.row("–£–ª—É—á—à–∏—Ç—å –∑–∞—â–∏—Ç—É", "–ö–∞—Ç–∞–ª–æ–≥ –∑–∞—â–∏—Ç")
keyboard5.row("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
@bot.message_handler(commands=["start"])
def start_message(message):
    global keyboard1, keyboard2
    try:
        r = open(f"{bot.get_chat(message.chat.id).username}.txt", "r", encoding="utf-8")
        bot.delete_message(message.chat.id, message.message_id)
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, —Ç—ã –Ω–∞–ø–∏—Å–∞–ª –º–Ω–µ /start", reply_markup=keyboard1)
        r.close()
    except:
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, —Ç—ã –Ω–∞–ø–∏—Å–∞–ª –º–Ω–µ /start", reply_markup=keyboard2)
@bot.message_handler(commands=["gild"])
def gild_message(message):
    try:
       r = open(f"{bot.get_chat(message.chat.id).username}.txt", "r", encoding="utf-8")
    except:
        bot.send_message(message.chat.id, "–ó–∞—Ä–µ–≥–∞–π—Ç–µ—Å—å")
        register(message)
    try:
        gilds = r.readline()
        gilds = r.readline()
        gilds = r.readline()
    except:
        bot.send_message(message.chat.id, "–£ –í–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ—é–∑–æ–≤")
    if gilds == "":
        bot.send_message(message.chat.id, "–£ –í–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ—é–∑–æ–≤")
        r.close()
    else:
        r.close()
        keyboard = telebot.types.ReplyKeyboardMarkup()
        for i in gilds.split(","):
            keyboard.row(i)
        keyboard.row("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
        bot.send_message(message.chat.id, f"–í—ã —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ {gilds}", reply_markup=keyboard)
@bot.message_handler(content_types=["text"])
def send_text(message):
    global keyboard1, keyboard3, gilds, keyboard4, keyboard5, d
    try:
        r = open(f"{bot.get_chat(message.chat.id).username}.txt", "r", encoding="utf-8")
        gilds = r.readline()
        gilds = r.readline()
        gilds = r.readline().replace("\n", "")
        gilds = gilds.split(",")
    except FileNotFoundError:
        register(message)
    if message.text.lower() == "—Å–æ—é–∑—ã":
        gild_message(message)
        f = open(f"{bot.get_chat(message.chat.id).username}.txt", "r+", encoding="utf-8")
        d = f.readlines()
        f.seek(0)
        for i in d:
            if "state" not in i:
                f.write(i)
        f.truncate()
        f.write("\nstate1")
        f.close()
    elif message.text.lower() == "–ø—Ä–æ—Ñ–∏–ª—å":
        r = open(f"{bot.get_chat(message.chat.id).username}.txt", "r", encoding="utf-8")
        country = r.readline()
        chars = r.readline()
        chars = chars.split(",")
        charism = chars[0]
        treasure = chars[1]
        army = chars[2]
        trick = chars[3]
        atribute = chars[4]
        bot.send_message(message.chat.id, f"–°—Ç—Ä–∞–Ω–∞: {country}\n–•–∞—Ä–∏–∑–º–∞: {charism}\n–ë–æ–≥–∞—Ç—Å—Ç–≤–æ: {treasure}\n–í–æ–µ–Ω–Ω–∞—è —Å–∏–ª–∞: {army}\n–•–∏—Ç—Ä–æ—Å—Ç—å: {trick}\n–ê—Ç—Ä–∏–±—É—Ç—ã: {atribute}")
        r.close()
    elif message.text.lower() == "—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è":
        register(message)
    elif message.text.lower() == "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏":
        bot.send_message(message.chat.id, "–ù–∞—Å—Ç—Ä–æ–∏–º –≤—Å—ëüòâ", reply_markup=keyboard3)
        f = open(f"{bot.get_chat(message.chat.id).username}.txt", "r+", encoding="utf-8")
        d = f.readlines()
        f.seek(0)
        for i in d:
            if "state" not in i:
                f.write(i)
        f.truncate()
        f.write("\nstate1")
        f.close()
    elif message.text.lower() == "—É–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç":
        keyboard = types.InlineKeyboardMarkup()
        key_yes = types.InlineKeyboardButton(text="–î–∞", callback_data="yesdel")
        keyboard.add(key_yes)
key_no = types.InlineKeyboardButton(text="–ù–µ—Ç", callback_data="nodel")
        keyboard.add(key_no)
        bot.send_message(message.chat.id, text="–£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç?", reply_markup=keyboard)
    elif message.text.upper() in gilds:
        r = open(f"{message.text}.txt", "r", encoding="utf-8")
        memb = r.readline()
        bot.send_message(message.chat.id, f"–í —Å–æ—é–∑–µ {message.text.upper()} —Å–æ—Å—Ç–æ—è—Ç {memb}")
        r.close()
    elif message.text.lower() == "–∞—Ç–∞–∫–∏":
        bot.send_message(message.chat.id, "–í–∞—à–∏ –∞—Ç–∞–∫–∏", reply_markup=keyboard4)
        f = open(f"{bot.get_chat(message.chat.id).username}.txt", "r+", encoding="utf-8")
        d = f.readlines()
        f.seek(0)
        for i in d:
            if "state" not in i:
                f.write(i)
        f.truncate()
        f.write("\nstate1")
        f.close()
    elif message.text.lower() == "–∑–∞—â–∏—Ç–∞":
        bot.send_message(message.chat.id, "–í–∞—à–∞ –∑–∞—â–∏—Ç–∞", reply_markup=keyboard5)
        f = open(f"{bot.get_chat(message.chat.id).username}.txt", "r+", encoding="utf-8")
        d = f.readlines()
        f.seek(0)
        for i in d:
            if "state" not in i:
                f.write(i)
        f.truncate()
        f.write("\nstate1")
        f.close()
    elif message.text.lower() == "‚¨ÖÔ∏è –Ω–∞–∑–∞–¥":
        r = open(f"{bot.get_chat(message.chat.id).username}.txt", "r", encoding="utf-8")
        r = r.readlines()
        for i in r:
            if "state" not in i:
                pass
            else:
                d = int(i.replace("state", ""))
                break
        if d == 1:
            bot.send_message(message.chat.id, "–ù–∞–∑–∞–¥ —Ç–∞–∫ –Ω–∞–∑–∞–¥", reply_markup=keyboard1)
        elif d == 3:
            bot.send_message(message.chat.id, "–ù–∞–∑–∞–¥ —Ç–∞–∫ –Ω–∞–∑–∞–¥", reply_markup=keyboard3)
        elif d == 4:
            bot.send_message(message.chat.id, "–ù–∞–∑–∞–¥ —Ç–∞–∫ –Ω–∞–∑–∞–¥", reply_markup=keyboard4)
        elif d == 5:
            bot.send_message(message.chat.id, "–ù–∞–∑–∞–¥ —Ç–∞–∫ –Ω–∞–∑–∞–¥", reply_markup=keyboard5)
def register(message):
    bot.send_message(message.chat.id, "–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π —Å—Ç—Ä–∞–Ω—ã")
    bot.register_next_step_handler(message, reg_chars)
def reg_chars(message):
    global name
    name = message.text
    bot.send_message(message.chat.id, "–í–æ—Ç 5 —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫. –•–∞—Ä–∏–∑–º–∞ —É –Ω–∞—Ä–æ–¥–∞, –ë–æ–≥–∞—Ç—Å—Ç–≤–æ, –í–æ–µ–Ω–Ω–∞—è —Å–∏–ª–∞, –•–∏—Ç—Ä–æ—Å—Ç—å(—Å—Ç—Ä–∞—Ç–µ–≥–∏—è, —Å–º–µ–∫–∞–ª–∫–∞) –∏ –¥–æ–ø. –∞—Ç—Ä–∏–±—É—Ç—ã (—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç,–æ—Ä—É–∂–∏–µ,—É—á—ë–Ω—ã–µ). –ù–∞–ø–∏—à–∏ –∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –∏—Ö —Å—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–∞–≤–Ω–∞ 25. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ 10.")
    bot.register_next_step_handler(message, reg_gilds)
def reg_gilds(message):
    global chars
    chars = message.text
    sum = 0
    for i in message.text.split(","):
        sum += int(i)
    if sum != 25:
        bot.send_message(message.chat.id, "–í–æ—Ç 5 —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫. –•–∞—Ä–∏–∑–º–∞ —É –Ω–∞—Ä–æ–¥–∞, –ë–æ–≥–∞—Ç—Å—Ç–≤–æ, –í–æ–µ–Ω–Ω–∞—è —Å–∏–ª–∞, –•–∏—Ç—Ä–æ—Å—Ç—å(—Å—Ç—Ä–∞—Ç–µ–≥–∏—è, —Å–º–µ–∫–∞–ª–∫–∞) –∏ –¥–æ–ø. –∞—Ç—Ä–∏–±—É—Ç—ã (—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç,–æ—Ä—É–∂–∏–µ,—É—á—ë–Ω—ã–µ). –ù–∞–ø–∏—à–∏ –∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –∏—Ö —Å—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–∞–≤–Ω–∞ 25. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ 10.")
        bot.register_next_step_handler(message, reg_gilds)
    else:
        bot.send_message(message.chat.id, "–ï—Å—Ç—å —É –≤–∞—Å –ø–æ–∂–µ–ª–∞–Ω–∏—è –≤ –∫–∞–∫–∏–µ c–æ—é–∑—ã, –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—Å—Ç—É–ø–∏—Ç—å?")
        bot.register_next_step_handler(message, endreg)
def endreg(message):
    global gilds, keyboard1
    gilds = message.text
    keyboard = types.InlineKeyboardMarkup()
    key_yes = types.InlineKeyboardButton(text="–î–∞", callback_data="yesreg")
    keyboard.add(key_yes)
    key_no = types.InlineKeyboardButton(text="–ù–µ—Ç", callback_data="noreg")
    keyboard.add(key_no)
    question = f"–í—ã {name}"
    bot.send_message(message.chat.id, text=question, reply_markup=keyboard)
@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
    global name, chars, gilds, keyboard1, keyboard2
    if call.data == "yesreg":
        r = open(f"{bot.get_chat(call.message.chat.id).username}.txt", "w", encoding="utf-8")
        r.write(name+"\n")
        r.write(chars+"\n")
        r.write(gilds+"\n")
        r.close()
        bot.send_message(call.message.chat.id, "–í—ã –∑–∞—Ä–µ–≥–∞–ª–∏—Å—å", reply_markup=keyboard1)
elif call.data == "noreg":
        register(call.message)
    elif call.data == "yesdel":
        os.remove(f"{bot.get_chat(call.message.chat.id).username}.txt")
        bot.send_message(call.message.chat.id, "–ö –æ–≥—Ä–æ–º–Ω–æ–º—É —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç —É–¥–∞–ª–µ–Ω", reply_markup=keyboard2)
    elif call.data == "nodel":
        bot.send_message(call.message.chat.id, "–ù—É –∏ —Å–ª–∞–≤–∞ –±–æ–≥—É!")
bot.remove_webhook()
bot.polling()